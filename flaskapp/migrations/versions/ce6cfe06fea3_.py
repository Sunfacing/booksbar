"""empty message

Revision ID: ce6cfe06fea3
Revises: 
Create Date: 2021-11-01 15:40:55.122161

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce6cfe06fea3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('eslite_to_kingstone_category_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subcategory', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('momo_to_kingstone_category_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subcategory', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nomenclature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=30), nullable=True),
    sa.Column('category', sa.String(length=30), nullable=True),
    sa.Column('subcategory', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id', 'platform')
    )
    op.create_table('price_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price_type', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_new_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('new', sa.Integer(), nullable=True),
    sa.Column('remove', sa.Integer(), nullable=True),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_scrape_time',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.Column('step', sa.String(length=30), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isbn_id', sa.Integer(), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.Column('pic_type', sa.String(length=30), nullable=True),
    sa.Column('url', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['isbn_id'], ['nomenclature.id'], ),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publisher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('isbn', sa.Integer(), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_favorite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('isbn', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Integer(), nullable=False),
    sa.Column('platform_pid', sa.Integer(), nullable=False),
    sa.Column('isbn', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('Nomenclature_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=30), nullable=False),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('publisher', sa.Integer(), nullable=True),
    sa.Column('size', sa.String(length=30), nullable=True),
    sa.Column('publish_date', sa.DateTime(), nullable=True),
    sa.Column('table_of_content', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author_intro', sa.Text(), nullable=True),
    sa.Column('cover_photo', sa.String(length=255), nullable=True),
    sa.Column('page', sa.Integer(), nullable=True),
    sa.Column('product_url', sa.String(length=255), nullable=True),
    sa.Column('e_book_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['Nomenclature_id'], ['nomenclature.id'], ),
    sa.ForeignKeyConstraint(['author'], ['publisher.id'], ),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.ForeignKeyConstraint(['publisher'], ['author.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_catalog_change',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('platform', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book_info.id'], ),
    sa.ForeignKeyConstraint(['platform'], ['platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_status_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('price_type', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('survey_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book_info.id'], ),
    sa.ForeignKeyConstraint(['price_type'], ['price_type.id'], ),
    sa.ForeignKeyConstraint(['status'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('price_status_info')
    op.drop_table('daily_catalog_change')
    op.drop_table('book_info')
    op.drop_table('user_favorite')
    op.drop_table('user_comment')
    op.drop_table('publisher')
    op.drop_table('picture')
    op.drop_table('daily_scrape_time')
    op.drop_table('daily_new_count')
    op.drop_table('author')
    op.drop_table('user_info')
    op.drop_table('status')
    op.drop_table('price_type')
    op.drop_table('platform')
    op.drop_table('nomenclature')
    op.drop_table('momo_to_kingstone_category_table')
    op.drop_table('eslite_to_kingstone_category_table')
    # ### end Alembic commands ###
